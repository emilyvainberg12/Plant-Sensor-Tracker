<!DOCTYPE html>
<html>
	<head>
		<script src="https://d3js.org/d3.v4.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
		<title>Plant Sitter</title>
	</head>
	<style>
		/* Style The Dropdown Button */
		/*
		h1 {
			color: blue;
		}
		*/
		body {
			background-color: rgb(222, 255, 222);
		}
		.dropbtn {
		  background-color: lightblue;
		  color: white;
		  padding: 16px;
		  font-size: 16px;
		  border: none;
		  cursor: pointer;
		}


		.container {
			display: grid;
			grid-template-rows: 350px 350px;
			grid-template-columns: 550px 550px;
		}
		/* The container <div> - needed to position the dropdown content */
		.dropdown {
		  position: relative;
		  display: inline-block;
		}
		
		/* Dropdown Content (Hidden by Default) */
		.dropdown-content {
		  display: none;
		  position: absolute;
		  background-color: #f9f9f9;
		  min-width: 160px;
		  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
		  z-index: 1;
		}
		
		/* Links inside the dropdown */
		.dropdown-content a {
		  color: black;
		  padding: 12px 16px;
		  text-decoration: none;
		  display: block;
		}
		
		/* Change color of dropdown links on hover */
		.dropdown-content a:hover {background-color: #f1f1f1}
		
		/* Show the dropdown menu on hover */
		.dropdown:hover .dropdown-content {
		  display: block;
		}
		
		/* Change the background color of the dropdown button when the dropdown content is shown */
		.dropdown:hover .dropbtn {
		  background-color: lightblue;
		}
		.table, th, td {
			text-align: center;
			border: 1px solid;
			width: 500px;
			height: 40px;
		}
		</style>

	<body>
		<center>
		<h1>Plant Sitter</h1>

		</center>
		<br> <br>
		<caption style="font-weight: bold">Your Plants: </caption>
		<table id="plants">
			<tr>
				<th id="test">Plant Name </th>
				<th>Recommened Water </th>
				<th>Recommended Light </th>
			</tr>
		</table>
		<br> <br>
		<label for="plants">Current Plant to Track: </label>
		<select name="plantSelect" id="plantSelect">
			<option value="Mint Leaf">Mint</option>
			<option value="Orchid">Orchid</option>
			<option value="Cactus">Cactus</option>
		</select>
		<button id="addPlant">Choose</button>
		<br><br>
		<div id="charts" class="container">
			<div id="chart a">
				<canvas id="water" style="width:100%;max-width:500px; height:300px"></canvas>
			</div>
			<div id="chart b">		
				<canvas id="light" style="width:100%;max-width:500px; height:300px"></canvas>
			</div>
			<div id="chart c">
				<canvas id="waterWeek" style="width:100%;max-width:500px; height:300px"></canvas>
			</div>
			<div id="chart d">
				<canvas id="lightWeek" style="width:100%;max-width:500px; height:300px"></canvas>
			</div>
		</div>

		<script>
			let switchDataSet = false; 
			let firstCount = 0;
			let moisture = 0;
			let light = 0;
			var xValuesLight = ["M- Light", "T- Light", "W- Light", "Th- Light","F- Light", "Sa- Light", "Su- Light"];
			var xValuesWater = ["M- Moisture", "T- Moisture", "W- Moisture",  "Th- Moisture", "F- Moisture", "Sa- Moisture", "Su- Moisture"];
			var xValuesTime = ["8am", "10am", "12pm", "2pm", "4pm", "6pm", "8pm",  "10pm", "12am", "2am",  "4am", "6am"];
			var yValuesLight = [];
			var yValuesWater = [];
			PlantInformation = [["Mint Leaf", "7 day a week", "indoor shade", "Tomorrow"],["Orchid", "1 day a week", "indoor sun", "Friday"], 
			["Cactus", "2 time a month", "outdoor sun", "Monday 21st"]]
			// first array is the light values
			// second array is the moisture values 
			PlantLineValues = {"Mint Leaf": [[400,400,400,400,400,400,400], [400,400,400,400,400,400,400]], "Orchid": [[300,300,300,300,300,300,300], [400,400,400,400,400,400,400]], "Cactus": [[700,700,700,700,700,700,700], [250,250,250,250,250,250,250]]};
	
			for (var i = 0; i < PlantInformation.length; i++){
				var t = "";
				var tr = "<tr>";
				tr += "<td>"+PlantInformation[i][0]+"</td>";
				tr += "<td>"+PlantInformation[i][1]+"</td>";
				tr += "<td>"+PlantInformation[i][2]+"</td>";
				// tr += "<td>"+PlantInformation[i][3]+"</td>";
				tr += "</tr>";
				t += tr;
				document.getElementById("plants").innerHTML += t;
			}
			var timer = null;
			//Update saved_plants upon clicking ADD button
			let plantBtn = document.getElementById("addPlant");
			let myPlant = ""
			function addPlant() {
				let change = false; 
				var count = 0;
				myDictionary = [{"moisture": [327, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
								"light": [640, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
								"light average": [0, 0, 0, 0, 0, 0, 0], 
								"water average": [0, 0, 0, 0, 0, 0, 0], 
								"intense light": 0
								},
								{"moisture": [408, 327, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
								"light": [638, 640, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
								"light average": [0, 0, 0, 0, 0, 0, 0], 
								"water average": [0, 0, 0, 0, 0, 0, 0], 
								"intense light": 0
								},
								{"moisture": [415, 408, 327, 0, 0, 0, 0, 0, 0, 0, 0, 0],
								"light": [638, 638, 640, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
								"light average": [638, 0, 0, 0, 0, 0, 0], 
								"water average": [383, 0, 0, 0, 0, 0, 0], 
								"intense light": 0
								},
								{"moisture": [419, 415, 408, 327, 0, 0, 0, 0, 0, 0, 0, 0],
								"light": [638, 638, 638, 640, 0, 0, 0, 0, 0, 0, 0, 0], 
								"light average": [638, 0, 0, 0, 0, 0, 0], 
								"water average": [383, 0, 0, 0, 0, 0, 0], 
								"intense light": 0
								},
								{"moisture": [422, 419, 415, 408, 327, 0, 0, 0, 0, 0, 0, 0],
								"light": [638, 638, 638, 638, 640, 0, 0, 0, 0, 0, 0, 0], 
								"light average": [638, 0, 0, 0, 0, 0, 0], 
								"water average": [383, 0, 0, 0, 0, 0, 0], 
								"intense light": 0
								},
								{"moisture": [423, 422, 419, 415, 408, 327, 0, 0, 0, 0, 0, 0],
								"light": [638, 638, 638, 638, 638, 640, 0, 0, 0, 0, 0, 0], 
								"light average": [638, 638, 0, 0, 0, 0, 0], 
								"water average": [421, 383, 0, 0, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [428, 423, 422, 419, 415, 408, 327, 0, 0, 0, 0, 0],
								"light": [637, 638, 638, 638, 638, 638, 640, 0, 0, 0, 0, 0], 
								"light average": [638, 638, 0, 0, 0, 0, 0], 
								"water average": [421, 383, 0, 0, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [432, 428, 423, 422, 419, 415, 408, 327, 0, 0, 0, 0],
								"light": [637, 637, 638, 638, 638, 638, 638, 640, 0, 0, 0, 0], 
								"light average": [638, 638, 0, 0, 0, 0, 0], 
								"water average": [421, 383, 0, 0, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [431, 432, 428, 423, 422, 419, 415, 408, 327, 0, 0, 0],
								"light": [637, 637, 637, 638, 638, 638, 638, 638, 640, 0, 0, 0], 
								"light average": [637, 638, 638, 0, 0, 0, 0], 
								"water average": [430, 421, 383, 0, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [435, 431, 432, 428, 423, 422, 419, 415, 408, 327, 0, 0],
								"light": [637, 637, 637, 637, 638, 638, 638, 638, 638, 640, 0, 0], 
								"light average": [637, 638, 638, 0, 0, 0, 0], 
								"water average": [430, 421, 383, 0, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [440, 435, 431, 432, 428, 423, 422, 419, 415, 408, 0, 0],
								"light": [637, 637, 637, 637, 637, 638, 638, 638, 638, 638, 0, 0], 
								"light average": [637, 638, 638, 0, 0, 0, 0], 
								"water average": [430, 421, 383, 0, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [439, 440, 435, 431, 432, 428, 423, 422, 419, 415, 0, 0],
								"light": [637, 637, 637, 637, 637, 637, 638, 638, 638, 638], 
								"light average": [637, 637, 638, 638, 0, 0, 0], 
								"water average": [438, 430, 421, 383, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [443, 439, 440, 435, 431, 432, 428, 423, 422, 419, 0, 0],
								"light": [637, 637, 637, 637, 637, 637, 637, 638, 638, 638], 
								"light average": [637, 637, 638, 638, 0, 0, 0], 
								"water average": [438, 430, 421, 383, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [443, 443, 439, 440, 435, 431, 432, 428, 423, 422, 0, 0],
								"light": [637, 637, 637, 637, 637, 637, 637, 637, 638, 638], 
								"light average": [637, 637, 638, 638, 0, 0, 0], 
								"water average": [438, 430, 421, 383, 0, 0, 0], 
								"intense light": 1
								},
								{"moisture": [449, 443, 443, 439, 440, 435, 431, 432, 428, 423],
								"light": [637, 637, 637, 637, 637, 637, 637, 637, 637, 638], 
								"light average": [637, 637, 637, 638, 638, 0, 0], 
								"water average": [445, 438, 430, 421, 383, 0, 0], 
								"intense light": 1
								},
								{"moisture": [443, 449, 443, 443, 439, 440, 435, 431, 432, 428],
								"light": [637, 637, 637, 637, 637, 637, 637, 637, 637, 637], 
								"light average": [637, 637, 637, 638, 638, 0, 0], 
								"water average": [445, 438, 430, 421, 383, 0, 0], 
								"intense light": 1
								},
								{"moisture": [447, 443, 449, 443, 443, 439, 440, 435, 431, 432],
								"light": [637, 637, 637, 637, 637, 637, 637, 637, 637, 637], 
								"light average": [637, 637, 637, 638, 638, 0, 0], 
								"water average": [445, 438, 430, 421, 383, 0, 0], 
								"intense light": 1
								},
								{"moisture": [446, 447, 443, 449, 443, 443, 439, 440, 435, 431],
								"light": [637, 637, 637, 637, 637, 637, 637, 637, 637, 637], 
								"light average": [637, 637, 637, 637, 638, 638, 0], 
								"water average": [445, 445, 438, 430, 421, 383, 0], 
								"intense light": 1
								},
								{"moisture": [450, 446, 447, 443, 449, 443, 443, 439, 440, 435],
								"light": [637, 637, 637, 637, 637, 637, 637, 637, 637, 637], 
								"light average": [637, 637, 637, 637, 638, 638, 0], 
								"water average": [445, 445, 438, 430, 421, 383, 0], 
								"intense light": 1
								},
								{"moisture": [431, 450, 446, 447, 443, 449, 443, 443, 439, 440],
								"light": [637, 637, 637, 637, 637, 637, 637, 637, 637, 637], 
								"light average": [637, 637, 637, 637, 638, 638, 0], 
								"water average": [445, 445, 438, 430, 421, 383, 0], 
								"intense light": 1
								},
								{"moisture": [436, 431, 450, 446, 447, 443, 449, 443, 443, 439],
								"light": [553, 637, 637, 637, 637, 637, 637, 637, 637, 637], 
								"light average": [609, 637, 637, 637, 637, 638, 638], 
								"water average": [439, 445, 445, 438, 430, 421, 383], 
								"intense light": 0
								}, 
								{"moisture": [435, 436, 431, 450, 446, 447, 443, 449, 443, 443],
								"light": [637, 553, 637, 637, 637, 637, 637, 637, 637, 637], 
								"light average": [609, 637, 637, 637, 637, 638, 638], 
								"water average": [439, 445, 445, 438, 430, 421, 383], 
								"intense light": 0
								}]
				if (timer) {
					clearInterval(timer);
				}
				myPlant = document.getElementById("plantSelect").value
				
				
				addData(myDictionary[count])
				addChart(myPlant)
				updateChart(); 
				timer = setInterval(() => 
				{
					count += 1
					if (count === 10){
						count = 0
					}
					if (count == 7){
						change = true; 
					}
					console.log("COUNT", count)
					addData(myDictionary[count])
					addChart(myPlant)
					updateChart(change);
				}
				, 2000); //Repeat every x seconds
			}
			plantBtn.addEventListener('click', addPlant);

			// fetch("http://192.168.40.40/ellie")
			// 	.then((response) => response.json())
			// 	.then((data) => addData(data))
			// 	.then((data) => console.log(data));

			function addData(myDictionary){																			
				console.log(myDictionary)
				moistureArray = myDictionary['moisture']
				lightArray = myDictionary['light']
				moistureWeek = myDictionary['water average']
				console.log("water", moistureWeek)
				lightWeek = myDictionary['light average']
				console.log("light", lightWeek)
				yValuesWater = [];
				yValuesLight= [];
				yValuesWaterWeek = [];
				yValuesLightWeek= [];
				for (var x = 0; x < moistureArray.length; x++) {
					yValuesWater.push(moistureArray[x])
				}
				for (var x = 0; x < lightArray.length; x++) {
					yValuesLight.push(lightArray[x])
				}
				for (var x = 0; x < moistureWeek.length; x++) {
					yValuesWaterWeek.push(moistureWeek[x])
				}
				for (var x = 0; x < lightWeek.length; x++) {
					yValuesLightWeek.push(lightWeek[x])
				}
				console.log("WEEK", yValuesLightWeek);
			}

			var lightChart;
			var waterChart;

			function addChart(myPlant){
				if (lightChart) {
					lightChart.destroy();
				}
				if (waterChart) {
					waterChart.destroy();
				}
				var currentChart1 = "water"
				var currentChart2 = "light"
				var currentChart3 = "waterWeek"
				var currentChart4 = "lightWeek"
				lightChart = new Chart(currentChart1, {
				type: "bar",
				data: { 
					labels: xValuesTime.slice(0, 7),
					datasets: [{
						type: 'bar',
						backgroundColor: 'orange',
						data: yValuesLight
					},{
						type: 'line',
						data : PlantLineValues[myPlant][0],
						borderColor: 'lightgreen',
						fill: false
					},
					]
					},
				options: {
					legend: {display: false},
					scales: {
						yAxes: [{
							ticks: {
								beginAtZero: true
							}
						}]
					},
					title: {
						display: true,
						text: "Daily Light Data for Plant: " + myPlant
					},
					chartArea: {
						backgroundColor: 'rgb(75, 192, 192)',
					}
				}
				});

				waterChart = new Chart(currentChart2, {
				type: "bar",
				data: {
					labels: xValuesTime.slice(0, 7),
					datasets: [{
						backgroundColor: 'lightblue',
						data: yValuesWater
					},
					{
						type: 'line',
						data : PlantLineValues[myPlant][1],
						borderColor: 'lightgreen',
						fill: false
					},
					]
					},
				options: {
					legend: {display: false},
					scales: {
						yAxes: [{
							ticks: {
								beginAtZero: true
							}
						}]
					},
					title: {
						display: true,
						text: "Daily Moisture Data for Plant: " + myPlant
					},
					chartArea: {
						backgroundColor: 'rgb(75, 192, 192)',
					}
				}
				});

				WeeklylightChart = new Chart(currentChart3, {
				type: "bar",
				data: { 
					labels: xValuesLight,
					datasets: [{
						type: 'bar',
						backgroundColor: 'orange',
						data: yValuesLightWeek
					},{
						type: 'line',
						data : PlantLineValues[myPlant][0],
						borderColor: 'lightgreen',
						fill: false
					},
					]
					},
				options: {
					legend: {display: false},
					scales: {
						yAxes: [{
							ticks: {
								beginAtZero: true
							}
						}]
					},
					title: {
						display: true,
						text: "Weekly Light Data for Plant: " + myPlant
					},
					chartArea: {
						backgroundColor: 'rgb(75, 192, 192)',
					}
				}
				});
				WeeklywaterChart = new Chart(currentChart4, {
				type: "bar",
				data: {
					labels: xValuesWater,
					datasets: [{
						backgroundColor: 'lightblue',
						data: yValuesWaterWeek
					},
					{
						type: 'line',
						data : PlantLineValues[myPlant][1],
						borderColor: 'lightgreen',
						fill: false
					},
					]
					},
				options: {
					legend: {display: false},
					scales: {
						yAxes: [{
							ticks: {
								beginAtZero: true
							}
						}]
					},
					title: {
						display: true,
						text: "Weekly Moisture Data for Plant: " + myPlant
					},
					chartArea: {
						backgroundColor: 'rgb(75, 192, 192)',
					}
				}
				});
			}

			function updateChart(change,lightData, waterData) {
				console.log(change)
				//update data fields of lightChart and waterChart
				//shift x-axes and y-axes left by one (so last 7 days are displayed)
				//add new column (day that was replaced)
				if (change == true){
					first_day = xValuesTime.shift();
					console.log("FIRST DAY", first_day)
					xValuesTime.push(first_day);
					if (first_day == '6am'){
						switchDataSet = true;
					}
					else{
						switchDataSet = false;
					}
				}
				else{
					first_day = xValuesTime[0];
				}
				console.log(xValuesTime)
				lightChart.data.labels = xValuesTime.slice(0, 7);
				waterChart.data.labels = xValuesTime.slice(0, 7);
				lightChart.data.datasets[0].data = yValuesLight;
				waterChart.data.datasets[0].data = yValuesWater;

				let colors = getBGColors();
				lightChart.data.datasets[0].backgroundColor = colors.light;
				waterChart.data.datasets[0].backgroundColor = colors.water
				
				lightChart.update();
				waterChart.update();
				WeeklylightChart.update();
				WeeklywaterChart.update();
			}

			//This can be a dict of flowers which are dicts structured as {light: 100, water: 100}
			function getBGColors() {
				var lightData = lightChart.data.datasets[0].data;
				var waterData = waterChart.data.datasets[0].data;
				var percentDiff = 0.4;
				var colors;
				colors = {light: [], water: []};
				var lightLevel = PlantLineValues[myPlant][0][0];
				var waterLevel = PlantLineValues[myPlant][1][0];
				for (var i = 0; i < lightData.length; i++) {
					if (Math.abs(lightData[i] - lightLevel) > lightLevel * percentDiff) {
						colors.light.push('red');
					}
					else {
						colors.light.push('orange');
					}
				}
				for (var i = 0; i < waterData.length; i++) {
					if (Math.abs(waterData[i] - waterLevel) > waterLevel * percentDiff) {
						colors.water.push('red');
					}
					else {
						colors.water.push('lightblue');
					}
				}
				return colors;
			}

		</script>
	</body>

<script src="https://d3js.org/d3.v7.min.js"></script>

<script type="application/javascript">
	const SERVERADDRESS = "http://127.0.0.1:3000"
	// use XML HTTP request to grab data from the server (central)
	let xmlhttp = new XMLHttpRequest()

	startTime = new Date();
	xmlhttp.onreadystatechange = function () {
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			let responseText = xmlhttp.responseText
			moisture = parseFloat(JSON.parse(responseText).moisture);
			light = parseFloat(JSON.parse(responseText).light);
		}
	}
</script>

</html>
